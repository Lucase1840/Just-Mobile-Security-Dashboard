'use client'

import { useRouter, useSearchParams, usePathname } from 'next/navigation'
import { useCallback, useEffect, useState } from 'react'

import { Search, Bug } from 'lucide-react'

import { Badge } from '@/components/ui/badge'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Input } from '@/components/ui/input'
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from '@/components/ui/select'
import { SEVERITY_LEVELS_LABELS } from '@/lib/constants/services'
import { getSeverityVariant } from '@/lib/utils'

import type { Vulnerability } from '@/types/services-data-types'

interface VulnerabilityListProps {
  onVulnerabilitySelect: (vulnerability: Vulnerability) => void
  selectedVulnerability?: Vulnerability | null
  vulnerabilities: Vulnerability[]
}

function VulnerabilityList({
  vulnerabilities,
  onVulnerabilitySelect,
  selectedVulnerability,
}: VulnerabilityListProps) {
  const router = useRouter()
  const pathname = usePathname()
  const searchParams = useSearchParams()

  // Initialize state from URL searchParams
  const [searchTerm, setSearchTerm] = useState(searchParams.get('name') || '')

  const [severityFilter, setSeverityFilter] = useState<string>(
    searchParams.get('severity') || 'all',
  )

  // Function to update URL with new search parameters
  const updateURL = useCallback(
    (newSearchTerm: string, newSeverityFilter: string) => {
      const params = new URLSearchParams(searchParams.toString())

      // Update or remove search term parameter
      if (newSearchTerm.trim()) {
        params.set('name', newSearchTerm.trim())
      } else {
        params.delete('name')
      }

      // Update or remove severity parameter
      if (newSeverityFilter !== 'all') {
        params.set('severity', newSeverityFilter)
      } else {
        params.delete('severity')
      }

      // Navigate to the same route with updated search params
      const newURL = params.toString() ? `${pathname}?${params.toString()}` : pathname

      router.push(newURL)
    },
    [pathname, router, searchParams],
  )

  // Handle search term changes
  const handleSearchChange = (value: string) => {
    // TODO: ADD DEBOUNCE
    setSearchTerm(value)
    updateURL(value, severityFilter)
  }

  // Handle severity filter changes
  const handleSeverityChange = (value: string) => {
    setSeverityFilter(value)
    updateURL(searchTerm, value)
  }

  // Update local state when URL changes (e.g., browser back/forward)
  useEffect(() => {
    const urlSearchTerm = searchParams.get('name') || ''
    const urlSeverityFilter = searchParams.get('severity') || 'all'

    setSearchTerm(urlSearchTerm)
    setSeverityFilter(urlSeverityFilter)
  }, [searchParams])

  return (
    <div className='space-y-4'>
      <Card>
        <CardHeader>
          <CardTitle className='flex items-center gap-2'>
            <Bug className='h-5 w-5' />
            Vulnerabilidades ({vulnerabilities.length})
          </CardTitle>
          <CardDescription>Vulnerabilidades encontradas durante el análisis</CardDescription>
        </CardHeader>
        <CardContent className='space-y-4'>
          <div className='flex flex-col sm:flex-row gap-4'>
            <div className='relative flex-1'>
              <Search className='absolute left-3 top-3 h-4 w-4 text-muted-foreground' />
              <Input
                className='pl-10'
                onChange={(e) => handleSearchChange(e.target.value)}
                placeholder='Buscar por nombre'
                value={searchTerm}
              />
            </div>
            <Select onValueChange={handleSeverityChange} value={severityFilter}>
              <SelectTrigger className='w-full sm:w-[180px]'>
                <SelectValue placeholder='Filtrar por severidad' />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value='all'>Todas las severidades</SelectItem>
                <SelectItem value='high'>Alta</SelectItem>
                <SelectItem value='medium'>Media</SelectItem>
                <SelectItem value='low'>Baja</SelectItem>
                <SelectItem value='info'>Info</SelectItem>
              </SelectContent>
            </Select>
          </div>

          <div className='space-y-3'>
            {vulnerabilities.map((vulnerability) => (
              <Card
                className={`cursor-pointer transition-colors hover:bg-muted/50 ${
                  selectedVulnerability?.vulnerabilityId === vulnerability.vulnerabilityId
                    ? 'ring-2 ring-primary'
                    : ''
                }`}
                key={vulnerability.vulnerabilityId}
                onClick={() => onVulnerabilitySelect(vulnerability)}
              >
                <CardContent className='p-4'>
                  <div className='flex items-start justify-between gap-4'>
                    <div className='flex-1 space-y-2'>
                      <div className='flex items-center gap-2'>
                        <h3 className='font-semibold'>{vulnerability.title}</h3>
                        <Badge variant={getSeverityVariant(vulnerability.severity)}>
                          {
                            SEVERITY_LEVELS_LABELS[
                              vulnerability.severity.toUpperCase() as keyof typeof SEVERITY_LEVELS_LABELS
                            ]
                          }
                        </Badge>
                      </div>
                      <div className='flex flex-col gap-2 text-sm text-muted-foreground'>
                        <span>{vulnerability.owaspRef.masvs}</span>
                        <span>{vulnerability.owaspRef.maswe}</span>
                        <span>Evidencias: {vulnerability.evidences.length}</span>
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ))}
          </div>

          {vulnerabilities.length === 0 && (
            <div className='text-center py-8 text-muted-foreground'>
              <Bug className='h-12 w-12 mx-auto mb-4 opacity-50' />
              <p>No se encontraron vulnerabilidades que coincidan con los criterios de búsqueda.</p>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  )
}

export default VulnerabilityList
